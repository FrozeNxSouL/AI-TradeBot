# name: CI

# on:
#   push:
#     branches:
#       - main

# jobs:
#   build:
#     runs-on: ubuntu-latest
#     env:
#       STRIPE_RK: ${{ secrets.STRIPE_RK }}
#       DATABASE_URL: ${{ secrets.DATABASE_URL }}
#       NEXT_PUBLIC_TIINGO_API_KEY: ${{ secrets.NEXT_PUBLIC_TIINGO_API_KEY }}
#       TIINGO_API_KEY: ${{ secrets.TIINGO_API_KEY }}
#       NEXTAUTH_URL: ${{ secrets.NEXTAUTH_URL }}
#       NEXT_PUBLIC_STRIPE_SECRET_KEY: ${{ secrets.NEXT_PUBLIC_STRIPE_SECRET_KEY }}
#       STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}
#       STRIPE_WEBHOOK_SECRET: ${{ secrets.STRIPE_WEBHOOK_SECRET }}
#       AUTH_SECRET: ${{ secrets.AUTH_SECRET }}
#       AUTH_GOOGLE_ID: ${{ secrets.AUTH_GOOGLE_ID }}
#       AUTH_GOOGLE_SECRET: ${{ secrets.AUTH_GOOGLE_SECRET }}

#       COMPOSE_DATABASE_URL : ${{ secrets.COMPOSE_DATABASE_URL }}

#     steps:
#       - uses: actions/checkout@v3 
#       - uses: actions/setup-node@v3
#         with:
#           node-version: 22.14.0
#       - name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v2
#       - name: Set up Docker
#         run: |
#           sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
#           sudo chmod +x /usr/local/bin/docker-compose
#       - name: Building Docker
#         run: |
#           docker-compose up --build
#       - name: Stop Docker containers
#         run: |
#           docker-compose -f docker-compose.prod.yml down

name: CI/CD

on:
  push:
    branches:
      - main
      - alternative-payment
  pull_request:
    branches:
      - main
      - alternative-payment

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2


      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.15.1/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version


      - name: Create .env.local file for website
        run: |
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> ./website/.env.local
          echo "NEXT_PUBLIC_TIINGO_API_KEY=${{ secrets.NEXT_PUBLIC_TIINGO_API_KEY }}" >> ./website/.env.local
          echo "TIINGO_API_KEY=${{ secrets.TIINGO_API_KEY }}" >> ./website/.env.local
          echo "NEXTAUTH_URL=${{ secrets.NEXTAUTH_URL }}" >> ./website/.env.local
          echo "NEXT_PUBLIC_STRIPE_SECRET_KEY=${{ secrets.NEXT_PUBLIC_STRIPE_SECRET_KEY }}" >> ./website/.env.local
          echo "STRIPE_SECRET_KEY=${{ secrets.STRIPE_SECRET_KEY }}" >> ./website/.env.local
          echo "STRIPE_WEBHOOK_SECRET=${{ secrets.STRIPE_WEBHOOK_SECRET }}" >> ./website/.env.local
          echo "AUTH_SECRET=${{ secrets.AUTH_SECRET }}" >> ./website/.env.local
          echo "AUTH_GOOGLE_ID=${{ secrets.AUTH_GOOGLE_ID }}" >> ./website/.env.local
          echo "AUTH_GOOGLE_SECRET=${{ secrets.AUTH_GOOGLE_SECRET }}" >> ./website/.env.local

      - name: Create .env file for Docker Compose
        run: |
          echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> .env
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env
          echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> .env
          echo "STRIPE_RK=${{ secrets.STRIPE_RK }}" >> .env
          echo "COMPOSE_DATABASE_URL=${{ secrets.COMPOSE_DATABASE_URL }}" >> .env

      - name: Build and run containers with Docker Compose
        run: |
          docker-compose -f compose.yaml --env-file .env up --build -d

      - name: Wait for containers to be ready
        run: sleep 10

      - name: Stop Docker containers
        run: docker-compose down